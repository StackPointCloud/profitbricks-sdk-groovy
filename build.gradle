apply plugin: 'groovy'
apply plugin: 'application'
apply plugin: 'idea'
apply plugin: 'maven-publish'

group 'com.profitbricks.sdk'
version '2.1-SNAPSHOT'

//noinspection GroovyUnusedAssignment
mainClassName = 'SDKTester'

//noinspection GroovyUnusedAssignment
applicationDefaultJvmArgs = [
    // #credentials
    user: 'some.user@email.com',
    password: 'your_password',
    verifySSL: 'false'
].collect {
    "-Dapi.${it.key}=${it.value}"
}

//noinspection GroovyUnusedAssignment
sourceCompatibility = 8
//noinspection GroovyUnusedAssignment
targetCompatibility = 8

repositories {
    mavenCentral()
    jcenter()
}

task sourceJar(type: Jar) {
    //noinspection GrUnresolvedAccess, GroovyAssignabilityCheck
    from sourceSets.main.allGroovy
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            //noinspection GroovyAssignabilityCheck
            artifact sourceJar {
                classifier 'sources'
            }
        }
    }
    repositories {
        maven {
            url 'http://artifacts.stage.pb.local/content/repositories/snapshots'
            credentials {
                username 'deployment'
                password 'deployment'
            }
        }
    }
}

configurations {
    // configuration that holds jars to include in the jar
    extraLibs
}

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.4.8',
            'org.codehaus.groovy.modules.http-builder:http-builder:0.7.2',
            'org.codehaus.gpars:gpars:1.2.0',
            'org.apache.logging.log4j:log4j-core:2.7'
    extraLibs 'org.codehaus.groovy.modules.http-builder:http-builder:0.7.2'
    runtime 'org.apache.logging.log4j:log4j-jcl:2.7',
    configurations.compile.extendsFrom(configurations.extraLibs)
}

jar {
    from {
        configurations.extraLibs.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

